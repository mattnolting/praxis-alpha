#!/usr/bin/env bun
// @bun
import{createRequire as d}from"node:module";var A=Object.create;var{getPrototypeOf:F,defineProperty:M,getOwnPropertyNames:k}=Object;var b=Object.prototype.hasOwnProperty;var N=(j,Q,H)=>{H=j!=null?A(F(j)):{};let X=Q||!j||!j.__esModule?M(H,"default",{value:j,enumerable:!0}):H;for(let _ of k(j))if(!b.call(X,_))M(X,_,{get:()=>j[_],enumerable:!0});return X};var y=d(import.meta.url);class R{options;watchers=new Map;eventQueue=new Map;debounceTimer;isWatching=!1;constructor(j={}){this.options=j;this.options={debounceMs:50,ignoreInitial:!0,persistent:!0,...j}}async watch(j,Q){let H=Array.isArray(j)?j:[j];this.isWatching=!0;for(let X of H)await this.setupPatternWatcher(X,Q);console.log(`\uD83D\uDD25 Excellent file watcher active: ${H.join(", ")}`),console.log(`⚡ Debounce: ${this.options.debounceMs}ms, Event-driven updates`)}async setupPatternWatcher(j,Q){try{let H=new Bun.Glob(j),X=await Array.fromAsync(H.scan(".")),_=new Map;for(let Z of X)try{let z=await Bun.file(Z).stat();_.set(Z,{mtime:z.mtime.getTime(),size:z.size})}catch{}let $=this.createNativeWatcher(j,_,Q);this.watchers.set(j,$)}catch(H){console.warn(`⚠️ Failed to setup watcher for ${j}:`,H),this.setupPollingFallback(j,Q)}}createNativeWatcher(j,Q,H){return setInterval(async()=>{if(!this.isWatching)return;try{let _=new Bun.Glob(j),$=await Array.fromAsync(_.scan(".")),Z=[];for(let z of $)try{let J=await Bun.file(z).stat(),I={mtime:J.mtime.getTime(),size:J.size},U=Q.get(z);if(!U)Z.push({type:"add",path:z,timestamp:Date.now()}),Q.set(z,I);else if(I.mtime>U.mtime||I.size!==U.size)Z.push({type:"change",path:z,timestamp:Date.now()}),Q.set(z,I)}catch{}for(let[z]of Q)if(!$.includes(z))Z.push({type:"unlink",path:z,timestamp:Date.now()}),Q.delete(z);if(Z.length>0)this.queueEvents(Z,H)}catch(_){console.warn(`⚠️ Watcher error for ${j}:`,_)}},25)}queueEvents(j,Q){for(let H of j)this.eventQueue.set(H.path,H);if(this.debounceTimer)clearTimeout(this.debounceTimer);this.debounceTimer=setTimeout(async()=>{if(this.eventQueue.size===0)return;let H=Array.from(this.eventQueue.values());this.eventQueue.clear(),H.sort((X,_)=>X.timestamp-_.timestamp);try{await Q(H)}catch(X){console.error("❌ Error processing file events:",X)}},this.options.debounceMs)}setupPollingFallback(j,Q){console.warn(`⚠️ Using polling fallback for ${j}`);let H=setInterval(async()=>{},200);this.watchers.set(j,H)}getStats(){return{isActive:this.isWatching,patterns:this.watchers.size,queuedEvents:this.eventQueue.size,debounceMs:this.options.debounceMs||50}}stop(){if(this.isWatching=!1,this.debounceTimer)clearTimeout(this.debounceTimer),this.debounceTimer=void 0;this.eventQueue.clear();for(let[j,Q]of this.watchers)try{if(typeof Q==="object"&&Q.close)Q.close();else clearInterval(Q)}catch(H){console.warn(`⚠️ Error stopping watcher for ${j}:`,H)}this.watchers.clear(),console.log("\uD83D\uDED1 Excellent file watcher stopped")}}function T(j){return new R(j)}var C=T({debounceMs:50,ignoreInitial:!0,persistent:!0});function Y(j,Q,H){let X=j.lastIndexOf("/");return`${X>=0?j.substring(0,X):"."}/${Q}${H}`}function q(j){let Q=j.lastIndexOf("/");return Q>=0?j.substring(Q+1):j}async function D(j,Q){try{let[H,X]=await Promise.all([Bun.file(j).stat(),Bun.file(Q).stat()]);return H.mtime>X.mtime}catch{return!0}}function V(j){let Q=j.split(`
`).filter(($)=>$.trim()&&!$.trim().startsWith("#")),H={},X=H,_="";for(let $ of Q){let Z=$.trim(),z=$.length-$.trimStart().length;if(Z.includes(":")){let[J,I]=Z.split(":").map((U)=>U.trim());if(I===""||I===void 0)X[J]={},_=J;else if(I.startsWith("[")&&I.endsWith("]")){let w=I.slice(1,-1).split(",").map((x)=>x.trim().replace(/["']/g,""));X[J]=w}else X[J]=I.replace(/["']/g,"")}else if(Z.startsWith("-")){if(!Array.isArray(X[_]))X[_]=[];X[_].push(Z.slice(1).trim().replace(/["']/g,""))}}return H}async function O(j){try{let H=await Bun.file(j).text();try{return V(H)}catch{try{let{parse:X}=await import("yaml");return X(H)}catch{return console.warn(`\u26A0\uFE0F Complex YAML detected, using simple parser: ${j}`),V(H)}}}catch(Q){return console.warn(`\u26A0\uFE0F Could not read config: ${j}`),null}}async function K(j,Q){try{await Bun.write(j,Q),console.log(`\u2705 Generated: ${q(j)}`)}catch(H){console.error(`\u274C Failed to write: ${j}`,H)}}function v(j,Q){let H=`${Q}Props`,X=[];for(let[_,$]of Object.entries(j))if(_==="variants"){let Z=$.map((z)=>`"${z}"`).join(" | ");X.push(`  /** Component variant */
  variant?: ${Z};`)}else if(_==="sizes"){let Z=$.map((z)=>`"${z}"`).join(" | ");X.push(`  /** Component size */
  size?: ${Z};`)}else if(_==="states")for(let Z of $)X.push(`  /** Component state: ${Z.replace("is","").toLowerCase()} */
  ${Z}?: boolean;`);else if(_==="accessibility")for(let Z of $)X.push(`  /** Accessibility: ${Z} */
  ${Z}?: string;`);else if(_==="interactions")for(let Z of $)X.push(`  /** Event handler: ${Z} */
  ${Z}?: (...args: any[]) => any;`);else if(_==="styling")for(let Z of $){let z=Z==="style"?"React.CSSProperties":"string";X.push(`  /** Styling: ${Z} */
  ${Z}?: ${z};`)}return`/**
 * Generated props for ${Q}
 * DO NOT EDIT - Generated by Praxis using registry
 */

export interface ${H} {
${X.join(`
`)}
}

export default ${H};
`}function S(j){let Q=j.component?.name||"Component",H={};if(j.uses){for(let[_,$]of Object.entries(j.uses))if(_==="variants")H={...H,variant:{type:"string",description:"Component variant",enum:$}};else if(_==="sizes")H={...H,size:{type:"string",description:"Component size",enum:$}};else if(_==="states")for(let Z of $)H={...H,[Z]:{type:"boolean",description:`Component state: ${Z.replace("is","").toLowerCase()}`}};else if(_==="accessibility")for(let Z of $)H={...H,[Z]:{type:"string",description:`Accessibility: ${Z}`}};else if(_==="interactions")for(let Z of $)H={...H,[Z]:{type:"string",description:`Event handler: ${Z}`}};else if(_==="styling")for(let Z of $)H={...H,[Z]:{type:"string",description:`Styling: ${Z}`}}}let X={$schema:"http://json-schema.org/draft-07/schema#",title:`${Q} Props`,type:"object",properties:H,required:[]};return JSON.stringify(X,null,2)}async function E(j){let Q=await O(j);if(!Q)return;let H=Q.component?.name||"Component",X=Y(j,H,"Props.ts");if(!await D(j,X)){console.log(`\u26A1 Cached: ${H}Props.ts`);return}let _;if(Q.uses)_=v(Q.uses,H);else _="// No 'uses' declaration found in config";await K(X,_)}async function G(j){let Q=await O(j);if(!Q)return;let H=Q.component?.name||"Component",X=Y(j,H,"Schema.json");if(!await D(j,X)){console.log(`\u26A1 Cached: ${H}Schema.json`);return}let _=S(Q);await K(X,_)}async function B(j,Q=["typescript"]){console.log(`\uD83D\uDE80 Processing: ${q(j)}`);let H=Q.map((X)=>{switch(X){case"typescript":return E(j);case"json-schema":return G(j);default:return console.warn(`Unknown format: ${X}`),Promise.resolve()}});await Promise.all(H)}async function L(j="."){console.log("\uD83D\uDD0D Scanning for Praxis configs...");let Q=new Bun.Glob("**/*.praxis.yaml"),H=await Array.fromAsync(Q.scan(j));console.log(`Found ${H.length} config files`);for(let X of H)await B(X,["typescript","json-schema"]);console.log(`\u2705 Generated interfaces for ${H.length} components`)}async function W(j="."){console.log("\uD83D\uDC40 Starting excellent file watcher..."),await L(j),console.log("\uD83D\uDD25 Using excellent event-driven file watching..."),await C.watch("**/*.praxis.yaml",async(Q)=>{console.log(`\uD83D\uDCE6 Processing ${Q.length} file events...`);let H=new Set(Q.map((_)=>_.path));for(let _ of H){let $=Q.find((Z)=>Z.path===_);if($?.type==="unlink")console.log(`\uD83D\uDDD1\uFE0F File deleted: ${$.path}`);else{console.log(`\uD83D\uDD04 Config changed: ${_}`);try{await B(_,["typescript","json-schema"])}catch(Z){console.error(`\u274C Generation failed for ${_}:`,Z)}}}let X=C.getStats();console.log(`\uD83D\uDCCA Watcher: ${X.patterns} patterns, ${X.debounceMs}ms debounce`)}),console.log("\uD83D\uDE80 Excellent file watching active... (Press Ctrl+C to stop)"),process.on("SIGINT",()=>{console.log(`
\uD83D\uDCCB Cleaning up excellent watcher...`),C.stop(),process.exit(0)})}if(y.main==y.module){let j=process.argv.slice(2);switch(j[0]){case"generate":await L(j[1]);break;case"watch":await W(j[1]);break;case"single":if(j[1])await B(j[1],["typescript","json-schema"]);else console.error("Usage: bun generate.ts single <config-path>");break;default:console.log(`
\uD83D\uDE80 Praxis Generate - 100% Bun-Native Implementation

Usage:
  bun generate.ts generate [dir]     # Scan and generate all
  bun generate.ts watch [dir]        # Watch for changes
  bun generate.ts single <config>    # Generate single file

Examples:
  bun generate.ts generate          # Process current directory
  bun generate.ts watch             # Watch current directory
  bun generate.ts single TestButton.praxis.yaml
`)}}var m={generateTypeScript:E,generateSchema:G,generateAll:B,scanAndGenerate:L,watchAndGenerate:W};export{W as watchAndGenerate,L as scanAndGenerate,E as generateTypeScript,G as generateSchema,B as generateAll,m as default};
