/**\n * Directory Scanner Example\n * Demonstrates the cascade discovery system in action\n */\n\nimport { \n  scanPraxisDirectories, \n  printCascadeMap,\n  getInheritanceChain,\n  getDescendants\n} from '../praxis/index.js';\n\nconsole.log('=== PRAXIS DIRECTORY SCANNER EXAMPLE ===');\n\nasync function demonstrateScanner() {\n  try {\n    // Scan current project for praxis directories\n    console.log('\\n🔍 Scanning project for praxis.config.yaml files...');\n    const cascadeMap = await scanPraxisDirectories({\n      rootDir: process.cwd(),\n      maxDepth: 5 // Reasonable depth limit\n    });\n    \n    // Print the discovered hierarchy\n    printCascadeMap(cascadeMap);\n    \n    // Demonstrate inheritance chains\n    console.log('\\n🔗 INHERITANCE CHAINS:');\n    for (const [path, directory] of cascadeMap.directories) {\n      const chain = getInheritanceChain(cascadeMap, path);\n      if (chain.length > 1) {\n        console.log(`  ${path}: ${chain.join(' → ')}`);\n      }\n    }\n    \n    // Demonstrate descendant lookup\n    console.log('\\n👶 DESCENDANTS:');\n    for (const root of cascadeMap.roots) {\n      const descendants = getDescendants(cascadeMap, root);\n      if (descendants.length > 0) {\n        console.log(`  ${root} has descendants: ${descendants.join(', ')}`);\n      }\n    }\n    \n    // Show config samples\n    console.log('\\n📄 CONFIGURATION SAMPLES:');\n    for (const [path, directory] of cascadeMap.directories) {\n      console.log(`\\n  📁 ${path}:`);\n      console.log(`     Config keys: ${Object.keys(directory.config).join(', ')}`);\n      if (directory.config.theme) {\n        console.log(`     Theme: ${directory.config.theme}`);\n      }\n      if (directory.config.component) {\n        console.log(`     Component: ${directory.config.component}`);\n      }\n    }\n    \n    console.log('\\n✅ Scanner demonstration complete!');\n    console.log('🎯 This system enables:');\n    console.log('   • Self-organizing directory registration');\n    console.log('   • Natural cascade inheritance');\n    console.log('   • Selective file watching');\n    console.log('   • Multi-processing architecture');\n    \n  } catch (error) {\n    console.error('❌ Scanner error:', error.message);\n    console.log('\\n💡 Try creating a praxis.config.yaml file in the root directory:');\n    console.log(`\necho \"theme: dark\\nversion: '1.0.0'\" > praxis.config.yaml`);\n  }\n}\n\n// Run the demonstration\ndemonstrateScanner();\n\nexport { scanPraxisDirectories, printCascadeMap };\n