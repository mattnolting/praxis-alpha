/**\n * YAML Loading Example\n * Shows how the semantic engine now loads real YAML configs\n */\n\nimport { initializeEngine, resolve, ready, loadPraxisConfigs } from '../praxis/index.js';\n\nconsole.log('=== YAML LOADING EXAMPLE ===');\n\n// Example 1: Load configs manually\nconsole.log('\\n1. Loading YAML configs manually...');\ntry {\n  const configs = await loadPraxisConfigs();\n  console.log('Loaded configs:', configs.size);\n  configs.forEach((config, key) => {\n    console.log(`  ${key}:`, config);\n  });\n} catch (error) {\n  console.log('No YAML files found - using fallback');\n}\n\n// Example 2: Initialize engine with YAML\nconsole.log('\\n2. Initializing semantic engine with YAML...');\ntry {\n  await initializeEngine();\n  console.log('‚úÖ Engine initialized with real YAML configs');\n} catch (error) {\n  console.log('‚ö†Ô∏è Fallback to mock data:', error.message);\n}\n\n// Example 3: Use semantic engine (same API, real data)\nconsole.log('\\n3. Using semantic engine...');\nconsole.log('ready(\"root\"):', ready('root'));\nconsole.log('resolve(\"root\"):', resolve('root'));\nconsole.log('resolve(\"components\"):', resolve('components'));\nconsole.log('resolve(\"button\"):', resolve('button'));\n\nconsole.log('\\n=== YAML Integration Complete ===');\nconsole.log('üéØ Same semantic engine API, now powered by real YAML data!');\n\nexport { initializeEngine, loadPraxisConfigs };\n